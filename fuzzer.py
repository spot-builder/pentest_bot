import aiohttp
import asyncio

with open("/usr/share/wordlists/dirbuster/directory-list-2.3-small.txt") as file:
    directories = file.read().split()


async def fetch(url, session):
    async with session.get(url, allow_redirects=False) as response:
        return [f"{url}", response.status, response.content_length]


async def run(url=None, extensions=None):
    tasks = []
    async with aiohttp.ClientSession(trust_env=True, headers={"User-Agent": "Mozilla/5.0 (X11; Linux x86_64) pentest_bot"}) as session:
        if extensions[0] != "None":
            for directory in directories:
                task = asyncio.ensure_future(fetch(f"{url}/{directory}", session))
                tasks.append(task)
                for extension in extensions:
                    task = asyncio.ensure_future(fetch(f"{url}/{directory}.{extension}", session))
                    tasks.append(task)
        else:
            for directory in directories:
                task = asyncio.ensure_future(fetch(f"{url}/{directory}", session))
                tasks.append(task)
        responses = await asyncio.gather(*tasks)
        return responses
